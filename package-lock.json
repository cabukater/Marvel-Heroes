import { of } from 'rxjs';
import { HttpHeaders } from '@angular/common/http';

describe('getCharonResponse()', () => {
  let service: MyService;
  let httpClientSpy: { get: jest.Mock };
  
  beforeEach(() => {
    httpClientSpy = {
      get: jest.fn()
    };
    
    service = new MyService(httpClientSpy as any);
  });
  
  it('should transform the response', (done) => {
    const caronResponseItem = { href: 'https://example.com/endpoint' };
    const headerParams = { key: 'Authorization', value: 'Bearer token' };
    
    const updatedHeader = new HttpHeaders().set('Authorization', 'Bearer token');
    const caronResponse = { href: 'https://example.com/endpoint', someData: 'someValue' };
    const expectedResponse = { endpoint: caronResponse.href, updateHeader: updatedHeader };
    
    httpClientSpy.get.mockReturnValue(of(caronResponse));
    
    service.getCharonResponse('relation', [headerParams]).subscribe((response) => {
      expect(response).toEqual(expectedResponse);
      done();
    });
  });
});
